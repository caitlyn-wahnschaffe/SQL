--Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'USA';

--Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country = 'Brazil';

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM chinook.customers
JOIN chinook.invoices
ON customers.CustomerId = invoices.CustomerId
WHERE Country = 'Brazil';

-- Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = "Sales Support Agent";

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT Billingcountry
FROM chinook.invoices;

-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.Lastname, invoices.InvoiceId
FROM chinook.employees
JOIN chinook.customers
ON customers.supportrepid = employees.EmployeeID
JOIN chinook.invoices
ON invoices.invoiceid = customers.CustomerId;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName as 'customer_first_name', customers.Country, customers.LastName as 'customer_last_name',
employees.FirstName as 'employee_first_name', employees.lastname as 'employee_last_name'
FROM chinook.employees
JOIN chinook.customers
ON customers.supportrepid = employees.EmployeeID
JOIN chinook.invoices
ON invoices.invoiceid = customers.CustomerId;

-- How many Invoices were there in 2009?
SELECT COUNT(invoiceId)
FROM chinook.invoices
WHERE Invoicedate LIKE "2009%";

-- What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE Invoicedate LIKE "2009%";

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceId, tracks.name
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.TrackId=tracks.TrackId

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.name as 'track_title', artists.Name as 'artist_name'
FROM chinook.albums
JOIN chinook.artists
ON albums.ArtistId=artists.ArtistId
JOIN chinook.tracks
ON albums.AlbumId = tracks.AlbumId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.name as 'track_name', media_types.MediaTypeId, genre.name as 'genre', albums.title as 'album_title'
FROM chinook.tracks
JOIN chinook.albums 
ON tracks.AlbumId = album.AlbumId
JOIN chinook.media_types
ON media_types.MediaTypeId = tracks.MediaTypeId
JOIN chinook.genres
ON genres.genreid=tracks.genreid;

-- Show the total sales made by each sales agent.
SELECT employees.Firstname, employees.Lastname, ROUND(SUM(invoices.Total)) AS Total_sales
FROM chinook.employees
JOIN chinook.customers
ON employees.employeeId = customers.SupportRepId
JOIN chinook.invoices 
ON invoices.CustomerId=customers.CustomerId
Where employees.title = "Sales Support Agent"
GROUP BY employees.FirstName;

-- Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' AND inv.InvoiceDate LIKE "2009%"
GROUP BY emp.FirstName
ORDER BY 'total sales' DESC
LIMIT 1;
